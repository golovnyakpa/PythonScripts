import sympy
init_printing()

z = Symbol('z',real=True)
A3 = Matrix([[1,1,1,0,1,1,0,1,0,1,0,1,1,0,1,1,1,1,1],
			 [1,1,0,0,0,0,1,0,1,1,1,1,1,0,1,1,0,1,1],
			 [0,1,0,1,1,0,1,0,1,1,0,1,1,0,0,0,0,1,1],
			 [0,1,1,0,0,1,1,1,0,1,0,1,0,1,1,0,1,0,0],
			 [0,1,1,1,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0],
			 [0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,1],
			 [0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,0,1,1],
			 [0,0,1,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0],
			 [0,0,1,0,0,0,1,1,0,0,0,0,1,1,1,0,1,0,0],
		   	 [1,1,0,1,0,1,0,0,1,1,0,0,1,1,1,1,1,0,0],
			 [1,1,0,1,0,1,0,1,1,1,0,0,1,1,1,0,1,1,0],
			 [1,0,1,1,0,1,1,0,0,1,0,0,1,1,0,1,0,0,1],
			 [0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,1,1,0,1],
			 [0,1,1,0,1,0,0,1,1,1,1,1,1,1,0,1,1,0,0],
			 [0,0,0,1,1,0,1,0,1,1,1,1,0,1,1,0,0,1,0],
			 [1,0,0,0,0,0,1,1,0,0,1,1,1,1,0,0,0,1,1],
			 [1,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,0,1],
			 [0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,1,0,0,1],
			 [0,1,0,0,0,1,1,0,0,1,0,1,1,0,1,0,0,0,0]])
			 
Az = Matrix([[1,1,1,0,1,1,0,1,0,1,0,1,1,0,1,1,1,1,1],
			 [1,1,0,0,0,0,1,0,1,1,1,1,1,0,1,1,0,1,1],
			 [0,1,0,1,1,0,1,0,1,1,0,1,1,0,0,0,0,1,1],
			 [0,1,1,0,0,1,1,1,0,1,0,1,0,1,1,0,1,0,0],
			 [0,1,1,1,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0],
			 [0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,1],
			 [0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,0,1,1],
			 [0,0,1,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0],
			 [0,0,1,0,0,0,1,1,0,0,0,0,1,1,1,0,1,0,0],
		   	 [1,1,0,1,0,1,0,0,1,1,0,0,1,1,1,1,1,0,0],
			 [1,1,0,1,0,1,0,1,1,1,0,0,1,1,1,0,1,1,0],
			 [1,0,1,1,0,1,1,0,0,1,0,0,1,1,0,1,0,0,1],
			 [0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,1,1,0,1],
			 [0,1,1,0,1,0,0,1,1,1,1,1,1,1,0,1,1,0,0],
			 [0,0,0,1,1,0,1,0,1,1,1,1,0,1,1,0,0,1,0],
			 [1,0,0,0,0,0,1,1,0,0,1,1,1,1,0,0,0,1,1],
			 [1,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,0,1],
			 [0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,1,0,0,1],
			 [0,1,0,0,0,1,1,0,0,1,0,1,1,0,1,0,0,0,0]])
			 
B3 = (Matrix([0,0,1,1,0,0,0,0,1,0,0,1,0,1,0,1,1,1,1]))		

def cycle_structure():
	counter = 0
	answer = []
	length_of_cycle = []
	for i in range(2 ** 19):
		temp = Matrix([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
		for j in range(19):
			temp[18-j] = counter << j & 1
		temp_counter = 0
		print(temp)
		while True:
			if temp not in answer:
				answer.append(temp)
				temp_counter += 1
				temp = A3 * temp
				for k in range(19):
					temp[k] = temp[k] % 2
				print(temp_counter)
			else:
				break
		length_of_cycle.append(temp_counter)
		counter += 1
	return(length_of_cycle)
  
